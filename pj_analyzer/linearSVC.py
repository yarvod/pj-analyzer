import itertools
import pickle
import nltk
from pj_analyzer.constants import MessageBlocks
from pj_analyzer.utils import cleanText


def load_model():
    return pickle.load(open("linearSVC.pickle", "rb"))


def condition(s: str):
    if s == "":
        return False
    if "#" in s:
        return False
    return True


def split_text(text: str) -> list:
    sentances = [
        nltk.tokenize.sent_tokenize(s) for s in text.split("\n") if condition(s)
    ]
    sentances = list(itertools.chain.from_iterable(sentances))
    return sentances


def predict(text: str):
    splited_text = split_text(text)
    model = load_model()
    cleantext = list(map(cleanText, splited_text))
    pr_labels = model.predict(cleantext)
    blocks = [MessageBlocks.MAP[pr_label] for pr_label in pr_labels]
    result = [
        {"label": label, "name": name, "sentence": sentence}
        for label, name, sentence in zip(pr_labels, blocks, splited_text)
    ]
    return result


if __name__ == "__main__":
    text = """–ö–æ–º–ø–∞–Ω–∏—è: –ö–æ–º–ø–∞–Ω–∏—è ¬´–û–Ω–ª–∞–π–Ω-–∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä –ò–≤–∏¬ª (https://www.ivi.ru)
–§–æ—Ä–º–∞—Ç: –≥–∏–±—Ä–∏–¥, 2-3 –¥–Ω—è –≤ –æ—Ñ–∏—Å–µ, –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å 5/2, –≤–æ–∑–º–æ–∂–Ω–æ –≥–∏–±–∫–æ–µ –Ω–∞—á–∞–ª–æ –¥–Ω—è
–ó–∞–Ω—è—Ç–æ—Å—Ç—å: —á–∞—Å—Ç–∏—á–Ω–∞—è
üí∞ –∑/–ø: –¥–æ 280 000—Ä—É–±.
–ö–æ–Ω—Ç–∞–∫—Ç: @Oskar17

üöÄ–û—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ Python –ø–æ–ª—É—á–∏—Ç—å –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º —Å–µ—Ä–≤–∏—Å–æ–º

üóù–∑–∞–¥–∞—á–∞: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–∏—Å—ã

üìå–û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏
‚Ä¢–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤—ã–µ –±—ç–∫–µ–Ω–¥-—Å–µ—Ä–≤–∏—Å—ã
‚Ä¢–ó–∞–Ω–∏–º–∞—Ç—å—Å—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ÔªøÔªøÔªøÔªøÔªø
‚Ä¢–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö —Ä–µ—à–µ–Ω–∏–π
üõ† : python, django, flask, golang, postgresql, mongodb, redis, memcached, elasticsearch, git, docker

üîî–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
‚Ä¢–û–ø—ã—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –æ—Ç 3,5 –ª–µ—Ç
‚Ä¢–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–¥–∞ –Ω–∞ python
‚Ä¢–°–≤–æ–±–æ–¥–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ linux (bash, sed, grep –∏ –¥—Ä—É–≥–∏–µ —É—Ç–∏–ª–∏—Ç—ã)
‚Ä¢–ó–Ω–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º –ø—Ä–∏ –æ—Ç–±–æ—Ä–µ –±—É–¥–µ—Ç
‚Ä¢–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å golang
‚Ä¢–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
‚Ä¢–†–∞–±–æ—Ç–∞ —Å Git

–í –∫–∞–Ω–¥–∏–¥–∞—Ç–µ —Ç–∞–∫–∂–µ –≤–∞–∂–Ω—ã
 ‚Ä¢–£–º–µ–Ω–∏–µ –≥—Ä–∞–º–æ—Ç–Ω–æ –∏–∑–ª–∞–≥–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ –∏ —É—Å—Ç–Ω–æ
‚Ä¢–£–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ

üèÜ–ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∑–∞–º–µ–Ω:
‚Ä¢–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: –ú–æ—Å–∫–≤–∞, –æ—Ñ–∏—Å –º. –î–º–∏—Ç—Ä–æ–≤—Å–∫–∞—è
‚Ä¢–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: –≥–∏–±—Ä–∏–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã, 2-3 –¥–Ω—è –≤ –æ—Ñ–∏—Å–µ, –ø–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å 5/2, –≤–æ–∑–º–æ–∂–Ω–æ –≥–∏–±–∫–æ–µ –Ω–∞—á–∞–ª–æ –¥–Ω—è
‚Ä¢–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ –¢–ö –†–§
‚Ä¢–£—é—Ç–Ω—ã–π –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ñ–∏—Å –≤ —à–∞–≥–æ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞–Ω—Ü–∏–π –º–µ—Ç—Ä–æ –î–º–∏—Ç—Ä–æ–≤—Å–∫–∞—è, –°–∞–≤–µ–ª–æ–≤—Å–∫–∞—è, —Ä—è–¥–æ–º —Å –§–ª–∞–∫–æ–Ω–æ–º –∏ –•–ª–µ–±–æ–∑–∞–≤–æ–¥–æ–º
‚Ä¢–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–±–æ—á–µ–π —Ç–µ—Ö–Ω–∏–∫–∏, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã.
‚Ä¢–ó–∞–±–æ—Ç–∏–º—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ –ó–û–ñ, –∞ –ø–æ—Å–ª–µ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞ - –î–ú–° (—Å–æ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–µ–π) –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∫—É –¥–ª—è –≤—ã–µ–∑–¥–∞ –∑–∞ —Ä—É–±–µ–∂
‚Ä¢–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–µ—Ö–∞—Ç—å –≤ –ú–æ—Å–∫–≤—É –∏–∑ —Ä–µ–≥–∏–æ–Ω–æ–≤ –†–æ—Å—Å–∏–∏ (–ø–∞–∫–µ—Ç —Ä–µ–ª–æ–∫–∞—Ü–∏–∏)
‚Ä¢–ö–æ–º–ø–∞–Ω–∏—è –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è agile-–ø–æ–¥—Ö–æ–¥–∞: –º–∏–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç –±—é—Ä–æ–∫—Ä–∞—Ç–∏—é –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º –≤—Å—ë, —á—Ç–æ –º–æ–∂–Ω–æ. "–ì–æ—Ä–∏–º" –Ω–∞—à–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º –∏ –¥–µ–ª–∞–µ–º —Ç–æ, —á–µ–º –ø–æ–ª—å–∑—É–µ–º—Å—è —Å–∞–º–∏
‚Ä¢–î—É–º–∞–µ—Ç –ø—Ä–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ t2m, –Ω–æ –Ω–µ –∑–∞–±–∏–≤–∞–µ—Ç –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏
‚Ä¢–° –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å—é –ø—Ä–æ–±—É–µ—Ç –Ω–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ–≥–¥–∞ –æ–Ω–∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω—ã
‚Ä¢–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –æ–±–º–µ–Ω–µ –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –∏–¥–µ—è–º–∏: –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–∞ –º–∏—Ç–∞–ø–∞—Ö –∏ –ø–æ–º–æ—â—å —Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –¥–æ–∫–ª–∞–¥–æ–≤
‚Ä¢–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∫–∏–¥–æ–∫ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π BestBenefits, –∞ —Ç–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω-–±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ¬´–ú–ò–§¬ª
‚Ä¢–í–∏—à–µ–Ω–∫–∞ –Ω–∞ —Ç–æ—Ä—Ç–µ: —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –ò–≤–∏

üì≤–∫–æ–Ω—Ç–∞–∫—Ç: –ï–ª–µ–Ω–∞ @Oskar17"""

    print(predict(text))
